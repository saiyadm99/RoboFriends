{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yOAeeA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAU,gBAAf,UACC,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,WACpD,gCACC,6BAAKL,IACL,4BAAIC,WCWOK,EAjBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAElB,OACC,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OAAO,cAAC,EAAD,CAENR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKIC,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACC,uBACAA,UAAW,gCACXW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCEI,EATA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,YC8CKC,G,wDA3Cd,aAAc,IAAD,8BACZ,gBAgBDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAhBzC,EAAKC,MAAQ,CACZvB,OAAQ,GACRK,YAAa,IAJF,E,qDAQb,WAAqB,IAAD,OACnBmB,MAAM,8CAA8CC,MAAK,SAAAC,GACxD,OAAOA,EAASC,UACdF,MAAK,SAAAG,GACP,EAAKR,SAAS,CAACpB,OAAQ4B,S,oBASzB,WACC,MAA8BC,KAAKN,MAA5BvB,EAAP,EAAOA,OAAQK,EAAf,EAAeA,YACTyB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACpC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAGtD,OAAqB,IAAlBjC,EAAOmC,OACF,yCAGN,sBAAKvC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUlB,OAAQ8B,a,GApCNM,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.811e5e03.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css'\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn(\r\n\t\t<div className=\"roboBody grow\">\r\n\t\t\t<img src={`https://robohash.org/${id}?200*200`} alt=\"Robots\" />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n  \r\n}\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n\treturn( \r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((user, i) => {\r\n\t\t\t\t\treturn(<Card \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\temail={robots[i].email}/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t</div>\r\n\t); \r\n}\r\nexport default CardList; \r\n","import React from \"react\";\r\nimport './Card.css';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\tclassName ='pa3 b--green bg-lightest-blue'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange={searchChange} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn(\r\n\t\t<div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\nexport default Scroll; ","import React, {Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css'\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {  \r\n\t\t\trobots: [ ],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users').then(response=>{\r\n\t\t\treturn response.json();\r\n\t\t}).then(users => {\r\n\t\t\tthis.setState({robots: users})\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst{ robots, searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\r\n\t\tif(robots.length === 0){\r\n\t\t\treturn <h1>Loading</h1>\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='tc'>\r\n\t\t\t\t\t<h1 className='f1'>Robo Friends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\t\r\n\t}\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t\t<App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}